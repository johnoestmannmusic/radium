
# This file defines the keybindings for Radium.
# Radium parses this file, and sometime use parts of it to make a new generated file named
# "keybindings_generated.py", which again is loaded into Radium
#


*
import radium as ra
*

?define  EDITOR       FOCUS_EDITOR
?define  MIXER        FOCUS_MIXER
?define  SEQUENCER    FOCUS_SEQUENCER
?define  MIXERSTRIPS  FOCUS_MIXERSTRIPS


####################################################################
?out ********** Computer Keyboard Note Playing/Editing ************
####################################################################

?define POLYSWITCH SHIFT_L
?define DOWNPLAY                         ra.keyDownPlay
?define DOWNPOLYPLAY EDITOR POLYSWITCH : ra.polyKeyDownPlay
?define UPPLAY EDITOR UP POLYSWITCH    : ra.keyUpPlay
?define UPPOLYPLAY EDITOR UP           : ra.keyUpPlay

?define(a) KEYHANDLE DOWNPLAY a ?n DOWNPOLYPLAY a ?n UPPLAY a ?n UPPOLYPLAY a

QWERTY_Z   EDITOR :	KEYHANDLE 0
QWERTY_S   EDITOR :	KEYHANDLE 1
QWERTY_X   EDITOR :	KEYHANDLE 2
QWERTY_D   EDITOR :	KEYHANDLE 3
QWERTY_C   EDITOR :	KEYHANDLE 4
QWERTY_V   EDITOR :	KEYHANDLE 5
QWERTY_G   EDITOR :	KEYHANDLE 6
QWERTY_B   EDITOR :	KEYHANDLE 7
QWERTY_H   EDITOR :	KEYHANDLE 8
QWERTY_N   EDITOR :	KEYHANDLE 9
QWERTY_J   EDITOR :   KEYHANDLE 10
QWERTY_M   EDITOR :   KEYHANDLE 11
MR1        EDITOR :   KEYHANDLE 12
QWERTY_L   EDITOR :   KEYHANDLE 13
MR2        EDITOR :   KEYHANDLE 14
LR1        EDITOR :   KEYHANDLE 15
MR3        EDITOR :   KEYHANDLE 16
LR3        EDITOR :   KEYHANDLE 18

QWERTY_Q   EDITOR :   KEYHANDLE 12
QWERTY_2   EDITOR :   KEYHANDLE 13
QWERTY_W   EDITOR :   KEYHANDLE 14
QWERTY_3   EDITOR :   KEYHANDLE 15
QWERTY_E   EDITOR :   KEYHANDLE 16
QWERTY_R   EDITOR :   KEYHANDLE 17
QWERTY_5   EDITOR :   KEYHANDLE 18
QWERTY_T   EDITOR :   KEYHANDLE 19
QWERTY_6   EDITOR :   KEYHANDLE 20
QWERTY_Y   EDITOR :   KEYHANDLE 21
QWERTY_7   EDITOR :   KEYHANDLE 22
QWERTY_U   EDITOR :   KEYHANDLE 23
QWERTY_I   EDITOR :   KEYHANDLE 24
QWERTY_9   EDITOR :   KEYHANDLE 25
QWERTY_O   EDITOR :   KEYHANDLE 26
QWERTY_0   EDITOR :   KEYHANDLE 27
QWERTY_P   EDITOR :   KEYHANDLE 28
PR1 EDITOR :   KEYHANDLE 29
0R2 EDITOR :   KEYHANDLE 30
PR2 EDITOR :   KEYHANDLE 31
0R3 EDITOR :   KEYHANDLE 32


F1 EDITOR : ra.decKeyAdd 12
F2 EDITOR : ra.incKeyAdd 12


#F3: ra.setKeyAdd 24
#F4: ra.setKeyAdd 72
#F5: ra.setKeyAdd 96

#TAB         : ra.incKeyAdd 24
#    SHIFT_L : ra.decKeyAdd 24

TAB: ra.switchWindowConfiguration

ESC EDITOR : ra.switchEditOnOff

#1            EDITOR : ra.unsplitLine
#1L1          EDITOR : ra.splitLine 2
1L1 SHIFT_L  EDITOR : ra.switchScrollPlayOnOff
    ALT_L    EDITOR : ra.switchSoundScrollOnOff



####################################################################
?out *** Navigating / Expand line / Track on/off / Note volumes / Various ****
####################################################################

PAGE_DOWN    EDITOR : ra.cursorDown 32
    CTRL_L   EDITOR : ra.copyEditorTrackOnOffToSeqblock
    CTRL_R   EDITOR : ra.copyEditorTrackOnOffToSeqblock    
    CTRL_L   SEQUENCER : ra.copyEditorTrackOnOffToSeqblock
    CTRL_R   SEQUENCER : ra.copyEditorTrackOnOffToSeqblock    
             SEQUENCER : ra.setCurrSeqtrackDown 4
              
PAGE_UP      EDITOR : ra.cursorUp 32
    CTRL_L   EDITOR : ra.copySeqblockTrackOnOffToEditor
    CTRL_R   EDITOR : ra.copySeqblockTrackOnOffToEditor    
    CTRL_L   SEQUENCER : ra.copySeqblockTrackOnOffToEditor
    CTRL_R   SEQUENCER : ra.copySeqblockTrackOnOffToEditor    
             SEQUENCER : ra.setCurrSeqtrackUp 4
             
HOME         EDITOR : ra.cursorPercentLine 0
END          EDITOR : ra.evalScheme "(if (= (ra:current-line) (- (ra:get-num-lines) 1)) (ra:cursor-percent-line 0) (ra:cursor-percent-line 100))"

DOWNARROW    EDITOR : ra.cursorDown 1
    SHIFT_L CTRL_L  EDITOR : ra.evalScheme "(line-zoom-out-exponentially)"
    SHIFT_L EXTRA_L  EDITOR : ra.evalScheme "(line-zoom-out-exponentially)"
    SHIFT_R  EDITOR : ra.cursorDown 8
    ALT_R    EDITOR : ra.cursorNextSomething
    SHIFT_L  EDITOR : ra.lineZoomBlock 1
    ALT_L    EDITOR : ra.insertLines 1
    CTRL_L : ra.selectNextPlaylistBlock
    CTRL_R : ra.selectNextPlaylistBlock

          SEQUENCER : ra.setCurrSeqtrackDown 1
          EXTRA_L SEQUENCER : ra.setCurrSeqtrackDown 1
          MIXER     : ra.setCurrentInstrumentDown
         
UPARROW      EDITOR : ra.cursorUp 1
    SHIFT_L CTRL_L  EDITOR : ra.evalScheme "(line-zoom-in-exponentially)"
    SHIFT_L EXTRA_L  EDITOR : ra.evalScheme "(line-zoom-in-exponentially)"
    SHIFT_R  EDITOR : ra.cursorUp 8
    ALT_R    EDITOR : ra.cursorPrevSomething
    SHIFT_L  EDITOR : ra.lineZoomBlock -1
    ALT_L    EDITOR : ra.insertLines -1
    CTRL_L  EDITOR : ra.selectPrevPlaylistBlock
    CTRL_R  EDITOR : ra.selectPrevPlaylistBlock

         SEQUENCER : ra.setCurrSeqtrackUp 1
         EXTRA_L SEQUENCER : ra.setCurrSeqtrackUp 1
         MIXER     : ra.setCurrentInstrumentUp
         
RIGHTARROW   EDITOR : ra.cursorRight
    SHIFT_R    EDITOR : ra.cursorNextTrack
    ALT_R  EDITOR : ra.incNoteVolume 1
    SHIFT_R ALT_R  EDITOR : ra.incNoteVolume 10
    SHIFT_L  EDITOR : ra.expandLine 1
    CTRL_L  EDITOR : ra.selectNextBlock
    CTRL_R  EDITOR : ra.selectNextBlock

          SEQUENCER : ra.incSongPos 1
    ALT_L SEQUENCER : ra.jumpNextSequencerMark
    ALT_R SEQUENCER : ra.jumpNextSequencerMark
    SHIFT_L SEQUENCER : ra.incSongPos 10
    SHIFT_R SEQUENCER : ra.incSongPos 10
    EXTRA_L SEQUENCER : ra.selectNextSeqblock
    
            MIXER     : ra.setCurrentInstrumentRight
         
LEFTARROW    EDITOR : ra.cursorLeft
    SHIFT_R    EDITOR : ra.cursorPrevTrack
    ALT_R  EDITOR : ra.incNoteVolume -1
    SHIFT_R ALT_R  EDITOR : ra.incNoteVolume -10
    SHIFT_L  EDITOR : ra.expandLine -1
    CTRL_L  EDITOR :ra.selectPrevBlock
    CTRL_R  EDITOR :ra.selectPrevBlock

          SEQUENCER : ra.incSongPos -1
    ALT_L SEQUENCER : ra.jumpPrevSequencerMark
    ALT_R SEQUENCER : ra.jumpPrevSequencerMark
    SHIFT_L SEQUENCER : ra.incSongPos -10
    SHIFT_R SEQUENCER : ra.incSongPos -10
    EXTRA_L SEQUENCER : ra.selectPrevSeqblock

            MIXER     : ra.setCurrentInstrumentLeft
            
J:
   CTRL_L     EDITOR : ra.requestCursorMove
   CTRL_R     EDITOR : ra.requestCursorMove
#F6   EDITOR : ra.cursorPercentLine    0
#F7   EDITOR : ra.cursorPercentLine   25
#F8   EDITOR : ra.cursorPercentLine   50
#F9   EDITOR : ra.cursorPercentLine   75
#F10  EDITOR : ra.cursorPercentLine  100

QWERTY_A:
    CTRL_L     EDITOR : ra.selectPrevBlock
    CTRL_R     EDITOR : ra.selectPrevBlock 

QWERTY_F:
    CTRL_L      EDITOR : ra.selectNextBlock
    CTRL_R      EDITOR : ra.selectNextBlock 
#    SHIFT_R  EDITOR : ra.selectNextPlaylistBlock
    SHIFT_L    EDITOR : ra.appendBlock    
    SHIFT_L SEQUENCER : ra.appendBlock    
    ALT_L     EDITOR : ra.appendTrack

#QWERTY_A:            ra.selectPrevBlock 
#    SHIFT_R  EDITOR : ra.selectPrevPlaylistBlock




?define KP_CTRL_L CTRL_L EDITOR : ra.selectTrack
?define KP_CAPS CAPS EDITOR : ra.selectTrack
?define KP_CTRL_L_CAPS CTRL_L CAPS EDITOR : ra.selectTrack

?define KP_CTRL_L_SW SHIFT_L CTRL_L EDITOR : ra.switchTrackOn 
?define KP_CAPS_SW SHIFT_L CAPS EDITOR : ra.switchTrackOn
?define KP_CTRL_L_CAPS_SW SHIFT_L CTRL_L CAPS EDITOR : ra.switchTrackOn

?define KP_CTRL_L_SO ALT_L CTRL_L EDITOR : ra.switchSoloTrack
?define KP_CAPS_SO ALT_L CAPS EDITOR : ra.switchSoloTrack 
?define KP_CTRL_L_CAPS_SO ALT_L CTRL_L CAPS EDITOR : ra.switchSoloTrack 

?define(a) KEYPAD_NAV ra.selectTrack a ?n KP_CTRL_L a +10 ?n KP_CAPS a +20 ?n KP_CTRL_L_CAPS a +30 ?n EDITOR SHIFT_L : ra.switchTrackOn a ?n KP_CTRL_L_SW a +10 ?n KP_CAPS_SW a +20 ?n KP_CTRL_L_CAPS_SW a +30 ?n EDITOR ALT_L : ra.switchSoloTrack a ?n KP_CTRL_L_SO a +10 ?n KP_CAPS_SO a +20 ?n KP_CTRL_L_CAPS_SO a +30

#################


KP_0	 EDITOR : KEYPAD_NAV 0
KP_1	 EDITOR : KEYPAD_NAV 1
KP_2	 EDITOR : KEYPAD_NAV 2
KP_3	 EDITOR : KEYPAD_NAV 3
KP_4	 EDITOR : KEYPAD_NAV 4
KP_5	 EDITOR : KEYPAD_NAV 5
KP_6	 EDITOR : KEYPAD_NAV 6
KP_7	 EDITOR : KEYPAD_NAV 7
KP_8	 EDITOR : KEYPAD_NAV 8
KP_9	 EDITOR : KEYPAD_NAV 9

*
def enter_play_keyboard_handler():
    if ra.isPlaying():
       was_playing_song = ra.isPlayingSong()
       ra.playStop()
       #ra.setSongPos(ra.getLastSongPosStart())
       if was_playing_song:
          ra.setLastSongPosStart(ra.getSongPos())
    else:
       ra.playSongFromCurrentSequencerPosition()

#def stop_and_set_back_cursor():
#    was_playing_song = ra.isPlayingSong()
#    ra.playStop()
#    if was_playing_song:
#      ra.setSongPos(ra.getLastSongPosStart())

def space_play_keyboard_handler():
    if ra.isPlaying():
       ra.playStop()
       #stop_and_set_back_cursor()
    else:
       ra.playSongFromPos(ra.getLastSongPosStart())
       #ra.playSongFromCurrentSequencerPosition()
*

KP_ENTER	:	keybinding.enter_play_keyboard_handler
        ALT_L    EDITOR :       ra.switchTrackOn
        ALT_R    EDITOR :       ra.switchTrackOn
	CTRL_L	 EDITOR :	ra.allTracksOn
	SHIFT_L	 EDITOR :	ra.switchSoloTrack
#        MOUSE_SEQUENCER : keybinding.enter_play_keyboard_handler
#        MOUSE_MIXER : keybinding.enter_play_keyboard_handler
        

####################################################################
?out ************************* Zoom ********************************
####################################################################

KP_SUB:
                         : ra.zoom -1
	CTRL_L		 : ra.zoom -4
	CTRL_R		 : ra.zoom -8

KP_ADD:
                         : ra.zoom 1
	CTRL_L		 : ra.zoom 4
	CTRL_R		 : ra.zoom 8

KP_MUL : ra.unzoom


####################################################################
?out ******** Extra keybindings for keyboards without keypad *******
####################################################################
F3:
       EDITOR         : ra.switchTrackOn
       CTRL_L EDITOR  : ra.allTracksOn

F4:
       EDITOR         : ra.switchSoloTrack
       CTRL_L EDITOR  : ra.allTracksOn


F5:
               : ra.showHideFocusEditor
       CTRL_L  : ra.setEditorKeyboardFocus
       CTRL_R  : ra.setEditorKeyboardFocus
#      EDITOR CTRL_L         : ra.zoom -4
#      EDITOR CTRL_R         : ra.zoom -8
#       EDITOR SHIFT_L : ra.unzoom


F6:              ra.showHidePlaylist
       CTRL_L  : ra.setSequencerKeyboardFocus
       CTRL_R  : ra.setSequencerKeyboardFocus
#       CTRL_L         : ra.zoom 4
#       CTRL_R         : ra.zoom 8


1 SHIFT_R  EDITOR : ra.selectTrack 1
2 SHIFT_R  EDITOR : ra.selectTrack 2
3 SHIFT_R  EDITOR : ra.selectTrack 3
4 SHIFT_R  EDITOR : ra.selectTrack 4
5 SHIFT_R  EDITOR : ra.selectTrack 5
6 SHIFT_R  EDITOR : ra.selectTrack 6
7 SHIFT_R  EDITOR : ra.selectTrack 7
8 SHIFT_R  EDITOR : ra.selectTrack 8
9 SHIFT_R  EDITOR : ra.selectTrack 9
0 SHIFT_R  EDITOR : ra.selectTrack 0

1 CTRL_R  EDITOR : ra.switchTrackOn 1
2 CTRL_R  EDITOR : ra.switchTrackOn 2
3 CTRL_R  EDITOR : ra.switchTrackOn 3
4 CTRL_R  EDITOR : ra.switchTrackOn 4
5 CTRL_R  EDITOR : ra.switchTrackOn 5
6 CTRL_R  EDITOR : ra.switchTrackOn 6
7 CTRL_R  EDITOR : ra.switchTrackOn 7
8 CTRL_R  EDITOR : ra.switchTrackOn 8
9 CTRL_R  EDITOR : ra.switchTrackOn 9
0 CTRL_R  EDITOR : ra.switchTrackOn 0


# Free keys:
# * W


####################################################################
?out *********** Note manipulation / Undo / Various ****************
####################################################################

U:
        EXTRA_L EDITOR : ra.generalTransposeRangeUp
        SHIFT_L EXTRA_L EDITOR : ra.generalTransposeRangeUp True
        SHIFT_R EXTRA_L EDITOR : ra.generalTransposeRangeUp True

        CTRL_L EDITOR : ra.generalTransposeBlockUp
        SHIFT_L CTRL_L EDITOR : ra.generalTransposeBlockUp True
        SHIFT_R CTRL_L EDITOR : ra.generalTransposeBlockUp True

        ALT_L EDITOR : ra.generalTransposeTrackUp
        SHIFT_L ALT_L EDITOR : ra.generalTransposeTrackUp True
        SHIFT_R ALT_L EDITOR : ra.generalTransposeTrackUp True

        ALT_R EDITOR : ra.generalTransposeEntryUp
        SHIFT_L ALT_R EDITOR : ra.generalTransposeEntryUp True
        SHIFT_R ALT_R EDITOR : ra.generalTransposeEntryUp True

Z:
	CTRL_L  	: ra.undo
	CTRL_R  	: ra.undo
	CTRL_R	SHIFT_R	: ra.redo
	CTRL_R	SHIFT_L	: ra.redo
	CTRL_L	SHIFT_R	: ra.redo
	CTRL_L	SHIFT_L	: ra.redo

D:
        EXTRA_L EDITOR : ra.generalTransposeRangeDown
        SHIFT_L EXTRA_L EDITOR : ra.generalTransposeRangeDown True
        SHIFT_R EXTRA_L EDITOR : ra.generalTransposeRangeDown True

        CTRL_L EDITOR : ra.generalTransposeBlockDown
        SHIFT_L CTRL_L EDITOR : ra.generalTransposeBlockDown True
        SHIFT_R CTRL_L EDITOR : ra.generalTransposeBlockDown True

        ALT_L EDITOR : ra.generalTransposeTrackDown
        SHIFT_L ALT_L EDITOR : ra.generalTransposeTrackDown True
        SHIFT_R ALT_L EDITOR : ra.generalTransposeTrackDown True

        ALT_R EDITOR : ra.generalTransposeEntryDown
        SHIFT_L ALT_R EDITOR : ra.generalTransposeEntryDown True
        SHIFT_R ALT_R EDITOR : ra.generalTransposeEntryDown True


G:
	ALT_R		 EDITOR : ra.glissando

Q:
	CTRL_L		 EDITOR : ra.quantitizeBlock
	ALT_L		 EDITOR : ra.generalTrackQuantitize
	EXTRA_L		 EDITOR : ra.quantitizeRange
        SHIFT_R          EDITOR : ra.configQuantitize
#	EXTRA_R		: ra.quit

8:
	CTRL_L		 EDITOR : ra.invertBlock
	ALT_L		 EDITOR : ra.invertTrack
	EXTRA_L		 EDITOR : ra.invertRange

9:
	CTRL_L		 EDITOR : ra.backwardsBlock
	ALT_L		 EDITOR : ra.backwardsTrack
        EXTRA_L		 EDITOR : ra.backwardsRange

6:
	CTRL_L		 EDITOR : ra.pexpandBlock
	ALT_L		 EDITOR : ra.pexpandTrack
	EXTRA_L		 EDITOR : ra.pexpandRange

7:
	EXTRA_L		 EDITOR : ra.expandRange
       	CTRL_L		 EDITOR : ra.expandBlock


####################################################################
?out ************************ Playing ******************************
####################################################################
#SPACE			: *
#        if ra.isPlaying():
#           ra.playStop()
#        else:
#           ra.playBlockFromStart()
#*
SPACE                   : keybinding.space_play_keyboard_handler
        CTRL_L          : ra.playStop
        CTRL_R          : ra.playStop
	ALT_R		: ra.playSongFromStart
	ALT_L		: ra.playSongFromStart
	SHIFT_R		: ra.playBlockFromCurrent
	ALT_R SHIFT_R	: ra.playSongFromCurrent
	EXTRA_L		: ra.playRangeFromStart
        CTRL_L          : ra.playStop
        CTRL_R          : ra.playStop
#        MOUSE_SEQUENCER : keybinding.space_play_keyboard_handler
#        MOUSE_MIXER : keybinding.space_play_keyboard_handler

MENU EDITOR :                     ra.configBlock
VOLUME_DOWN:              ra.volumeDown
VOLUME_UP:                ra.volumeUp
MUTE:                     ra.mute
PLAY:                     ra.playBlockFromStart
STOP:                     ra.playStop


####################################################################
?out *************** ClipBoard / Various ***************************
####################################################################

Z:
	EXTRA_L		 EDITOR : ra.cancelRange
X:
	EXTRA_L		        EDITOR : ra.cutRange
	ALT_L		        EDITOR : ra.cutTrack
	CTRL_L		        EDITOR : ra.cutSelectedPianonotes
	CTRL_R		        EDITOR : ra.cutSelectedPianonotes
        
        CTRL_L SEQUENCER : ra.cutSelectedSeqblocks
        CTRL_R SEQUENCER : ra.cutSelectedSeqblocks
        
        CTRL_L MIXER : ra.cutSelectedMixerObjects
        CTRL_R MIXER : ra.cutSelectedMixerObjects
        
C:
	EXTRA_L		        EDITOR : ra.copyRange
	ALT_L		        EDITOR : ra.copyTrack
#	EXTRA_R		        EDITOR : ra.configWindow # EXTRA_R can't be used as modfier anymore.
	CTRL_L		        EDITOR : ra.copySelectedPianonotes
	CTRL_R		        EDITOR : ra.copySelectedPianonotes

        CTRL_L SHIFT_L          EDITOR : ra.copyBlock
        CTRL_L SHIFT_R          EDITOR : ra.copyBlock
        CTRL_R SHIFT_L          EDITOR : ra.copyBlock
        CTRL_R SHIFT_R          EDITOR : ra.copyBlock

                                 MIXER : ra.generateNewColorForAllSelectedInstruments
                             SEQUENCER : ra.generateNewColorForAllSelectedSeqblocks
                                 
	CTRL_L MIXER : ra.copySelectedMixerObjects
	CTRL_R MIXER : ra.copySelectedMixerObjects
        
       	CTRL_R SEQUENCER : ra.copySelectedSeqblocks
       	CTRL_L SEQUENCER : ra.copySelectedSeqblocks

V:
	EXTRA_L		 EDITOR : ra.pasteRange
	ALT_L		 EDITOR : ra.pasteTrack
	CTRL_L		        EDITOR : ra.pastePianonotes
	CTRL_R		        EDITOR : ra.pastePianonotes
        
        CTRL_L SHIFT_L          EDITOR : ra.pasteBlock
        CTRL_L SHIFT_R          EDITOR : ra.pasteBlock
        CTRL_R SHIFT_L          EDITOR : ra.pasteBlock
        CTRL_R SHIFT_R          EDITOR : ra.pasteBlock
        
	CTRL_L MOUSE_MIXER      MIXER  : ra.pasteMixerObjects
	CTRL_R MOUSE_MIXER      MIXER  : ra.pasteMixerObjects
        
       	CTRL_L MOUSE_SEQUENCER  SEQUENCER : ra.pasteSeqblocks
       	CTRL_R MOUSE_SEQUENCER  SEQUENCER : ra.pasteSeqblocks

B:
	EXTRA_L		 EDITOR : ra.markRange
#	EXTRA_R		 EDITOR : ra.configBlock # EXTRA_R can't be used as modfier anymore.
                         MIXER  : ra.switchBypassForSelectedInstruments
                 

####################################################################
?out ************************ Various ******************************
####################################################################

1L1:
                      SEQUENCER : ra.setSongPos 0
        CTRL_L		 EDITOR : ra.setNoteScrollLength 0
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 0
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 0

1:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 1
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 1
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 1
                      
2:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 2
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 2
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 2
                      
3:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 3
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 3
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 3
                      
4:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 4
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 4
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 4
                      
5:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 5
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 5
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 5

6:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 6
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 6

7:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 7
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 7

8:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 8
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 8

9:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 9
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 9

0:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 10
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 10

0R1:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 11
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 11

0R2:
        ALT_L         SEQUENCER : ra.jumpToSequencerMark 12
        ALT_R         SEQUENCER : ra.jumpToSequencerMark 12
                      

BACKSPACE		 EDITOR : ra.insertReallines -1
	ALT_L		 EDITOR : ra.insertReallines 1

INSERT:
        CTRL_L          : ra.playlistInsert
        CTRL_R          : ra.playlistInsert

ZL1:   ra.simulateDeleteMouseButton
       ALT_L : ra.simulateDeleteMouseButton
       ALT_R : ra.simulateDeleteMouseButton
       
DEL:
                         EDITOR : ra.generalDelete True
       SHIFT_L 	         EDITOR : ra.generalDelete False
       SHIFT_R 	         EDITOR : ra.generalDelete False
       CTRL_L            EDITOR : ra.playlistRemove
       CTRL_R            EDITOR : ra.playlistRemove
                      SEQUENCER : ra.deleteSeqblock
                      MIXER     : ra.deleteSelectedMixerObjects
        ALT_L            EDITOR : ra.clearTrack

                      
                      
#QWERTY_A EDITOR :                ra.generalDelete

RETURN			: keybinding.enter_play_keyboard_handler
        ALT_L            EDITOR : ra.generalReturn
        ALT_R            EDITOR : ra.generalReturn
	SHIFT_L		 EDITOR : ra.insertLines
#        MOUSE_SEQUENCER : keybinding.enter_play_keyboard_handler
#        MOUSE_MIXER : keybinding.enter_play_keyboard_handler


F7                      : ra.showHideFocusMixer
       CTRL_L           : ra.setMixerKeyboardFocus
       CTRL_R           : ra.setMixerKeyboardFocus
F8                      : ra.showHideFocusSequencer
       CTRL_L           : ra.setSequencerKeyboardFocus
       CTRL_R           : ra.setSequencerKeyboardFocus
F9                     : ra.showHideInstrumentWidget
       CTRL_L  : ra.setMixerKeyboardFocus
       CTRL_R  : ra.setMixerKeyboardFocus
F10                     : ra.showHideEditWidget
       CTRL_L  : ra.setEditorKeyboardFocus
       CTRL_R  : ra.setEditorKeyboardFocus

F11              	: ra.toggleCurrWindowFullScreen
#F11 MOUSE_EDITOR	: ra.toggleFullScreen
#F11 MOUSE_MIXER		: ra.toggleFullScreen
#F11 MOUSE_SEQUENCER	: ra.toggleFullScreen
#F11 MOUSE_MIXERSTRIPS   : ra.evalScheme "(toggle-current-mixer-strips-fullscreen)"
F12                      EDITOR : ra.selectInstrumentForTrack
#F12 CTRL_L              : ra.evalScheme "(let ((id (<ra> :create-audio-instrument-from-description (<ra> :request-load-preset-instrument-description)))) (when (ra:is-legal-instrument id) (<ra> :autoposition-instrument id) (<ra> :connect-audio-instrument-to-main-pipe id)))    "

S:
	ALT_L		 EDITOR : ra.swapTracks
        
	CTRL_L		: ra.save
	CTRL_R		: ra.save

	CTRL_L	SHIFT_L	: ra.saveAsOrExportSong
	CTRL_R	SHIFT_L	: ra.saveAsOrExportSong
	CTRL_L	SHIFT_R	: ra.saveAsOrExportSong
	CTRL_R	SHIFT_R	: ra.saveAsOrExportSong

        SEQUENCER       : ra.evalScheme "(split-seqblock)"

         # Change "#f" to "#t" below if you want to split at grid
        SHIFT_L SEQUENCER       : ra.switchSeqtrackSolo
        SHIFT_R SEQUENCER       : ra.switchSeqtrackSolo

                 MIXER  : ra.switchSoloForSelectedInstruments
        SHIFT_L  MIXER  : ra.switchSoloForSelectedInstruments
        SHIFT_R  MIXER  : ra.switchSoloForSelectedInstruments


#        CTRL_L MOUSE_SEQUENCER : ra.save
#        CTRL_R MOUSE_SEQUENCER : ra.save
#	CTRL_L		: ra.splitBlock 
#       EXTRA_R	SHIFT_R	: ra.saveAs

N:
	ALT_L		 EDITOR : ra.showHideNoteTrack
	CTRL_L		 EDITOR : ra.showHideNoteTracksInBlock

W:
	ALT_L		 EDITOR : ra.changeTrackNoteAreaWidth
	CTRL_L		 EDITOR : ra.changeBlockNoteAreaWidth

M:
	ALT_L		 EDITOR : ra.minimizeTrack
	CTRL_L		 EDITOR : ra.minimizeBlockTracks
                         MIXER  : ra.switchMuteForSelectedInstruments
                     SEQUENCER  : ra.switchSeqtrackMute
        CTRL_L SHIFT_L          : ra.switchMetronome
        CTRL_L SHIFT_R          : ra.switchMetronome
        CTRL_R SHIFT_L          : ra.switchMetronome
        CTRL_R SHIFT_R          : ra.switchMetronome
                 
#T:
#	ALT_L		 EDITOR : ra.switchTrackNoteShowType
#	CTRL_L		 EDITOR : ra.switchBlockNoteShowType

P:
        ALT_L            EDITOR : ra.showHidePianoroll
        CTRL_L           EDITOR : ra.showHidePianorollInBlock

Y:
        ALT_L            EDITOR : ra.showHideVeltext
        CTRL_L           EDITOR : ra.showHideVeltextInBlock

R:
	ALT_L		 EDITOR : ra.deleteTracks 1
	CTRL_L		 EDITOR : ra.deleteBlock
	CTRL_L	      SEQUENCER : ra.deleteBlock
        SHIFT_L           MIXER : ra.setRandomSampleForAllSelectedInstruments

I:
	ALT_L		 EDITOR : ra.insertTracks 1
	CTRL_L		 EDITOR : ra.insertBlock
	CTRL_L        SEQUENCER : ra.insertBlock

O:
	CTRL_L		: ra.loadOrImportSong
	CTRL_R		: ra.loadOrImportSong

#B FOCUS_EDITOR FOCUS_MIXER FOCUS_SEQUENCER : ra.evalScheme "(ra:load-song (ra:get-path <string>sounds/Radium_Care.rad<string>))"
#B FOCUS_EDITOR FOCUS_MIXER FOCUS_SEQUENCER : ra.evalScheme "(ra:load-song (ra:get-path \"sounds/Radium_Care.rad\"))"

####################################################################
?out ********************* Advanced (examples) *********************
####################################################################

# How to run scheme code from keyboard shortcut:
#O ALT_L : *
#        ra.evalScheme("(c-display 50000)(newline)")
#*

